<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GEE on Algorithms &amp; Maps</title>
    <link>/tags/gee/</link>
    <description>Recent content in GEE on Algorithms &amp; Maps</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>csaybar@gmail.com (Cesar Aybar)</managingEditor>
    <webMaster>csaybar@gmail.com (Cesar Aybar)</webMaster>
    <lastBuildDate>Fri, 21 Jun 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/gee/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Integrating Earth Engine with Tensorflow II - U-Net</title>
      <link>/post/eetf2/</link>
      <pubDate>Fri, 21 Jun 2019 00:00:00 +0000</pubDate>
      <author>csaybar@gmail.com (Cesar Aybar)</author>
      <guid>/post/eetf2/</guid>
      <description>This notebook has been inspired by the Chris Brown &amp;amp; Nick Clinton EarthEngine + Tensorflow presentation. It shows the step by step how to integrate Google Earth Engine and TensorFlow 2.0 in the same pipeline (EE-&amp;gt;Tensorflow-&amp;gt;EE).
  OBS: I will assume reader are already familiar with the basic concepts of Machine Learning and Convolutional Networks. If it is doesnâ€™t, I firstly highly recommend taking the deep learning coursera specialization available here.</description>
    </item>
    
    <item>
      <title>Integrating Earth Engine with Tensorflow I - DNN</title>
      <link>/post/eetf/</link>
      <pubDate>Thu, 30 May 2019 00:00:00 +0000</pubDate>
      <author>csaybar@gmail.com (Cesar Aybar)</author>
      <guid>/post/eetf/</guid>
      <description>This notebook has been inspired by the Chris Brown &amp;amp; Nick Clinton EarthEngine + Tensorflow presentation. It shows the step by step how to integrate Google Earth Engine and TensorFlow 2.0 in the same pipeline (EE-&amp;gt;Tensorflow-&amp;gt;EE).
  Topics Create a training/testing dataset (in a TFRecord format) using Earth Engine. Create functions for parse data (TFRecord -&amp;gt; tf.</description>
    </item>
    
  </channel>
</rss>