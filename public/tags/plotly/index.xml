<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>plotly on csaybar</title>
    <link>/tags/plotly/</link>
    <description>Recent content in plotly on csaybar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 12 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/plotly/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to create 3D Interactive choropleth map in R</title>
      <link>/blog/2019/01/12/plotlyformaps_i/</link>
      <pubDate>Sat, 12 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/2019/01/12/plotlyformaps_i/</guid>
      <description>1. Introduction A Choropleth map is a thematic map in which areas are colored considering the quantitative measurement of a variable, such as population density or gross domestic product.
There are a lot of libraries in R (and of course in Python too) that perform it efficiently. However, I feel that ggplot2 offers the fastest and most friendly way. Don’t you believe me? Look at this.</description>
    </item>
    
    <item>
      <title>Raster resampling in R</title>
      <link>/blog/2018/12/05/resample/</link>
      <pubDate>Wed, 05 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/2018/12/05/resample/</guid>
      <description>1. Introduction A typical workflow for earth analysts always will have to do with several spatial data sources (e.g. Sentinel, MODIS and Landsat) each one with a particular extent and pixel resolution. Resampling is the technique used to homogenize these spatial attributes.
Image obtained from here
 This post demonstrates how easy and incredibly fast is resampling gridded data in R using either the raster and gdalUtils packages.</description>
    </item>
    
  </channel>
</rss>